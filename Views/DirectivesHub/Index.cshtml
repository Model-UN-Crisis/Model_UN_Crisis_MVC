@model IEnumerable<Model_UN_Crisis.Models.STG_Directives>

@{
    Layout = "~/Views/Shared/_LayoutSideNav.cshtml";
    var userRole = Context.Session.GetString("userRole");
    var newsList = Model.ToList();
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Directive Hub</title>
    <meta http-equiv="refresh" content="6">
</head>

<div class="header">
    <h1>Directive Hub</h1>
    <a asp-controller="DirectivesHub" asp-action="CreateNews">
		<button>Create New Directive Posting</button>
    </a>
</div>

<div class="hero">
</div>
<div class="content">
    <div class="columns">
            @for (int i = newsList.Count - 1; i >= 0; i--)
            {
                var news = newsList[i];
                var name = "";
                foreach (var user in (IEnumerable<Model_UN_Crisis.Models.STG_Users>)ViewData["Users"])
                {
                    if (user.Iuser_id == news.Iauthor)
                {
                        name = user.Cusername;
                        break;
                    }
                }
            <div class="card-container">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">
                            <span class="left-text">Author: @name</span>
                            <span class="right-text">Status: @news.Cstatus</span>
                        </h5>
                        <p class="card-text">@news.Ctext</p>
                    </div>
                </div>
                <form id="@("formWith " + @news.Idirective_Id)" method="post" asp-controller="DirectivesHub" asp-action="ViewNews">
                    <input type="hidden" name="newsId" value="@news.Idirective_Id" />
                    <button type="button" class="send-button" onclick="submitForm('@news.Idirective_Id')">View full</button>
                </form>
            </div>
            }
    </div>
</div>
</div>
<script>
    function submitForm(chatParticipantId) {
        var form = document.getElementById("formWith " + chatParticipantId);
        form.submit();
    }
</script>

<style>
    * {
        box-sizing: border-box;
    }
    body{
        background-color: #eee;
    }
    .hero {
        background-color: #f0f0f0;
        margin: 0;
        padding: 0;
        font-family: "Helvetica Now Display", helvetica, sans-serif;
    }

    .header h1 {
        padding-left: 40px;
        font-size: 3rem;
        font-weight: 300;
    }

    .header button {
        margin-left: 40px;
        background-color: #076CED;
        color: #fdfdfd;
        border: none;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        padding: 15px 32px;
        border-radius: 5px;
        opacity: 0.8;
        transition: 0.3s;
        cursor: pointer;
    }

        .header button:hover {
            opacity: 1
        }

    .hero p {
        font-size: 14px;
    }

    .content .columns h3 {
        margin-top: 0;
    }

    .content {
        background-color: #f0f0f0;
        padding: 2rem;
        max-width: 1850px;
        margin: 0 auto;
    }

    .card {
        border-radius: 8px;
        padding: 1rem;
        background-color: #fdfdfd;
        min-width: 400px;
        max-width: 400px;
        height: 300px;
        overflow: hidden;
    }

        .card p {
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: calc(300px / 20px);
            -webkit-box-orient: vertical;
            word-wrap: break-word;
        }

    .columns {
        display: flex;
        gap: 2rem;
        flex-wrap: wrap;
    }

        .columns > * {
            flex-basis: calc(calc(600px - 100%) * 42069);
            flex-grow: 1;
        }

    .card-container {
        display: flex;
        flex-direction: column;
    }

    .card-title {
        display: flex;
        justify-content: space-between;
    }

    .left-text {
        align-self: flex-start;
    }

    .right-text {
        align-self: flex-end;
    }

    .card-text {
        font-weight: normal; /* Set font weight to normal */
    } 
</style>